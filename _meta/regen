#!/usr/bin/env python3
# vim:fileencoding=utf-8:ts=2:sw=2:sts=2:expandtab

import subprocess
import os.path
import glob
import sys

# Get the path from the .git directory location
Path = os.path.abspath(subprocess.check_output(('git', 'rev-parse', '--show-toplevel'), encoding='utf-8')[0:-1])

# Bail out if the venv isn't in place
if not os.path.exists(os.path.join(Path, '_meta/venv')):
  print('Virtual Environment missing.  Please run `_meta/init`.')
  sys.exit(1)

# Update the system path to use the venv
sys.path[1:1] = [os.path.join(Path, '_meta/venv/lib/python3.8/site-packages')]

# import packages from venv

import rich
import rich.console
import toml


# create rich console
console = rich.console.Console()


console.rule(f'Running Regen in `{Path}`')

# Find the list of examples based on any directory within examples/ which has a Cargo.toml
ExamplePathList = [os.path.dirname(p) for p in glob.glob(os.path.join(Path, 'examples', '*', 'Cargo.toml'))]
ExampleList = []

print()
console.print('Found Examples:', style='white bold')
print()

for p in ExamplePathList:
  console.print(p)





class Example():
  def __init__(self, p):
    self.Path = p
    self.README_Path = os.path.join(self.Path, 'README.md')

    if os.path.exists(self.README_Path):
      with open(self.README_Path, 'rt') as f:
        self.README_Lines = f.readlines()
    else:
      self.README_Lines = None

  def __repr__(self):
    return f'<Example `{self.Path}`>'


print()
console.print('Parsing:', style='white bold')
print()

for p in ExamplePathList:
  console.print(p)
  ExampleList.append(Example(p))

print()
console.print('Writing:', style='white bold')
print()

for o in ExampleList:
  console.print(o)
  



    










